{"ast":null,"code":"var _jsxFileName = \"/home/professor/Documents/React Js Project/todo-app/src/Components/Todo.js\";\n\n// import '../assets/css/Todo.css';\n// import React, { useEffect, useState } from 'react';\n// function Task({ task, index, completeTask, removeTask }) {\n//     return (\n//         <div\n//             className=\"task\"\n//             style={{ textDecoration: task.completed ? 'line-through' : '' }}\n//         >\n//             {task.title}\n//             <button\n//                 style={{ background: 'red' }}\n//                 onClick={() => removeTask(index)}\n//             >\n//                 x\n//             </button>\n//             <button onClick={() => completeTask(index)}>Complete</button>\n//         </div>\n//     );\n// }\nfunction CreateTask({\n  addTask\n}) {\n  const [value, setValue] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTask(value);\n    setValue('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input\",\n    value: value,\n    placeholder: \"Add a new task\",\n    onChange: e => setValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default function Todo() {\n  const [totaltasks, setTotalTasks] = useState(0);\n  const [tasksRemaining, setTasksRemaining] = useState(0);\n  const [tasks, setTasks] = useState([{\n    title: 'Grab some Pizza',\n    completed: false\n  }, {\n    title: 'Do your workout',\n    completed: false\n  }, {\n    title: 'Hangout with friends',\n    completed: false\n  }]);\n  useEffect(() => {\n    setTotalTasks(tasks.filter(task => task).length);\n    setTasksRemaining(tasks.filter(task => !task.completed).length);\n  });\n\n  const addTask = title => {\n    const newTasks = [...tasks, {\n      title,\n      completed: false\n    }];\n    setTasks(newTasks);\n  };\n\n  const completeTask = index => {\n    const newTasks = [...tasks];\n    newTasks[index].completed = true;\n    setTasks(newTasks);\n  };\n\n  const removeTask = index => {\n    const newTasks = [...tasks];\n    newTasks.splice(index, 1);\n    setTasks(newTasks);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"TOTAL TASKS (\", totaltasks, \")\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"TODO - ITEMS (\", tasksRemaining, \")\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tasks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, tasks.map((task, index) => /*#__PURE__*/React.createElement(Task, {\n    task: task,\n    index: index,\n    completeTask: completeTask,\n    removeTask: removeTask,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CreateTask, {\n    addTask: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/home/professor/Documents/React Js Project/todo-app/src/Components/Todo.js"],"names":["CreateTask","addTask","value","setValue","useState","handleSubmit","e","preventDefault","target","Todo","totaltasks","setTotalTasks","tasksRemaining","setTasksRemaining","tasks","setTasks","title","completed","useEffect","filter","task","length","newTasks","completeTask","index","removeTask","splice","map"],"mappings":"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","sourcesContent":["// import '../assets/css/Todo.css';\n\n// import React, { useEffect, useState } from 'react';\n\n// function Task({ task, index, completeTask, removeTask }) {\n//     return (\n//         <div\n//             className=\"task\"\n//             style={{ textDecoration: task.completed ? 'line-through' : '' }}\n//         >\n//             {task.title}\n//             <button\n//                 style={{ background: 'red' }}\n//                 onClick={() => removeTask(index)}\n//             >\n//                 x\n//             </button>\n//             <button onClick={() => completeTask(index)}>Complete</button>\n//         </div>\n//     );\n// }\n\nfunction CreateTask({ addTask }) {\n    const [value, setValue] = useState('');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (!value) return;\n        addTask(value);\n        setValue('');\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                className=\"input\"\n                value={value}\n                placeholder=\"Add a new task\"\n                onChange={(e) => setValue(e.target.value)}\n            />\n        </form>\n    );\n}\n\nexport default function Todo() {\n    const [totaltasks, setTotalTasks] = useState(0);\n    const [tasksRemaining, setTasksRemaining] = useState(0);\n    const [tasks, setTasks] = useState([\n        {\n            title: 'Grab some Pizza',\n            completed: false,\n        },\n        {\n            title: 'Do your workout',\n            completed: false,\n        },\n        {\n            title: 'Hangout with friends',\n            completed: false,\n        },\n    ]);\n\n    useEffect(() => {\n        setTotalTasks(tasks.filter((task) => task).length);\n        setTasksRemaining(tasks.filter((task) => !task.completed).length);\n    });\n\n    const addTask = (title) => {\n        const newTasks = [...tasks, { title, completed: false }];\n        setTasks(newTasks);\n    };\n\n    const completeTask = (index) => {\n        const newTasks = [...tasks];\n        newTasks[index].completed = true;\n        setTasks(newTasks);\n    };\n\n    const removeTask = (index) => {\n        const newTasks = [...tasks];\n        newTasks.splice(index, 1);\n        setTasks(newTasks);\n    };\n\n    return (\n        <div className=\"todo-container\">\n            <div className=\"header\">TOTAL TASKS ({totaltasks})</div>\n            <div className=\"header\">TODO - ITEMS ({tasksRemaining})</div>\n            <div className=\"tasks\">\n                {tasks.map((task, index) => (\n                    <Task\n                        task={task}\n                        index={index}\n                        completeTask={completeTask}\n                        removeTask={removeTask}\n                        key={index}\n                    />\n                ))}\n            </div>\n            <div className=\"create-task\">\n                <CreateTask addTask={addTask} />\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}