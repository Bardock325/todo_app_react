{"ast":null,"code":"var _jsxFileName = \"/home/professor/Documents/React Js Project/todo-app/src/Components/Todo.js\";\nimport React, { useState } from \"react\";\nimport \"../assets/css/Todo.css\";\n\nfunction Task({\n  task,\n  index,\n  completeTask,\n  removeTask\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task\",\n    style: {\n      textDecoration: task.completed ? \"line-through\" : \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, task.title, /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      background: \"red\"\n    },\n    onClick: () => removeTask(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, \"x\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => completeTask(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"Complete\"));\n}\n\nfunction CreateTask({\n  addTask\n}) {\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTask(value);\n    setValue(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input\",\n    value: value,\n    placeholder: \"Add a new task\",\n    onChange: e => setValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default function Todo() {\n  const [tasks, setTasks] = useState([{\n    title: \"Grab some Pizza\",\n    completed: false\n  }, {\n    title: \"Do your workout\",\n    completed: false\n  }, {\n    title: \"Hangout with friends\",\n    completed: false\n  }]);\n\n  const addTask = title => {\n    const newTasks = [...tasks, {\n      title,\n      completed: false\n    }];\n    setTasks(newTasks);\n  };\n\n  const completeTask = index => {\n    const newTasks = [...tasks];\n    newTasks[index].completed = true;\n    setTasks(newTasks);\n  };\n\n  const removeTask = index => {\n    const newTasks = [...tasks];\n    newTasks.splice(index, 1);\n    setTasks(newTasks);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"TODO - ITEMS\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tasks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, tasks.map((task, index) => /*#__PURE__*/React.createElement(Task, {\n    task: task // index={index}\n    ,\n    completeTask: completeTask,\n    removeTask: removeTask,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CreateTask, {\n    addTask: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/professor/Documents/React Js Project/todo-app/src/Components/Todo.js"],"names":["React","useState","Task","task","index","completeTask","removeTask","textDecoration","completed","title","background","CreateTask","addTask","value","setValue","handleSubmit","e","preventDefault","target","Todo","tasks","setTasks","newTasks","splice","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"../assets/css/Todo.css\";\n\nfunction Task({ task, index, completeTask, removeTask }) {\n  return (\n    <div\n      className=\"task\"\n      style={{ textDecoration: task.completed ? \"line-through\" : \"\" }}\n    >\n      {task.title}\n      <button style={{ background: \"red\" }} onClick={() => removeTask(index)}>\n        x\n      </button>\n      <button onClick={() => completeTask(index)}>Complete</button>\n    </div>\n  );\n}\n\nfunction CreateTask({ addTask }) {\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!value) return;\n    addTask(value);\n    setValue(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"input\"\n        value={value}\n        placeholder=\"Add a new task\"\n        onChange={(e) => setValue(e.target.value)}\n      />\n    </form>\n  );\n}\n\nexport default function Todo() {\n  const [tasks, setTasks] = useState([\n    {\n      title: \"Grab some Pizza\",\n      completed: false,\n    },\n    {\n      title: \"Do your workout\",\n      completed: false,\n    },\n    {\n      title: \"Hangout with friends\",\n      completed: false,\n    },\n  ]);\n\n  const addTask = (title) => {\n    const newTasks = [...tasks, { title, completed: false }];\n    setTasks(newTasks);\n  };\n\n  const completeTask = (index) => {\n    const newTasks = [...tasks];\n    newTasks[index].completed = true;\n    setTasks(newTasks);\n  };\n\n  const removeTask = (index) => {\n    const newTasks = [...tasks];\n    newTasks.splice(index, 1);\n    setTasks(newTasks);\n  };\n\n  return (\n    <div className=\"todo-container\">\n      <div className=\"header\">TODO - ITEMS</div>\n      <div className=\"tasks\">\n        {tasks.map((task, index) => (\n          <Task\n            task={task}\n            // index={index}\n            completeTask={completeTask}\n            removeTask={removeTask}\n            key={index}\n          />\n        ))}\n      </div>\n      <div className=\"create-task\">\n        <CreateTask addTask={addTask} />\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}