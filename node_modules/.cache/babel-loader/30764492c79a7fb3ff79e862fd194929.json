{"ast":null,"code":"var _jsxFileName = \"/home/professor/Documents/React Js Project/todo-app/src/Components/Todo.js\";\nimport '../assets/css/Todo.css';\nimport React, { useEffect, useState } from 'react';\n\nfunction Task({\n  task,\n  index,\n  completeTask,\n  removeTask\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task\",\n    style: {\n      textDecoration: task.completed ? 'line-through' : ''\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, task.title, /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      background: 'red'\n    },\n    onClick: () => removeTask(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, \"x\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => completeTask(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"Complete\"));\n}\n\nfunction CreateTask({\n  addTask\n}) {\n  const [value, setValue] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTask(value);\n    setValue('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input\",\n    value: value,\n    placeholder: \"Add a new task\",\n    onChange: e => setValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default function Todo() {\n  const [totaltasks, setTotalTasks] = useState(0);\n  const [tasksRemaining, setTasksRemaining] = useState(0);\n  const [tasks, setTasks] = useState([{\n    title: 'Grab some Pizza',\n    completed: false\n  }, {\n    title: 'Do your workout',\n    completed: false\n  }, {\n    title: 'Hangout with friends',\n    completed: false\n  }]);\n  useEffect(() => {\n    setTotalTasks(tasks.filter(task => task).length);\n    setTasksRemaining(tasks.filter(task => !task.completed).length);\n  });\n\n  const addTask = title => {\n    const newTasks = [...tasks, {\n      title,\n      completed: false\n    }];\n    setTasks(newTasks);\n  };\n\n  const completeTask = index => {\n    const newTasks = [...tasks];\n    newTasks[index].completed = true;\n    setTasks(newTasks);\n  };\n\n  const removeTask = index => {\n    const newTasks = [...tasks];\n    newTasks.splice(index, 1);\n    setTasks(newTasks);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"TOTAL TASKS (\", totaltasks, \")\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"TODO - ITEMS (\", tasksRemaining, \")\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tasks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, tasks.map((task, index) => /*#__PURE__*/React.createElement(Task, {\n    task: task,\n    index: index,\n    completeTask: completeTask,\n    removeTask: removeTask,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CreateTask, {\n    addTask: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/home/professor/Documents/React Js Project/todo-app/src/Components/Todo.js"],"names":["React","useEffect","useState","Task","task","index","completeTask","removeTask","textDecoration","completed","title","background","CreateTask","addTask","value","setValue","handleSubmit","e","preventDefault","target","Todo","totaltasks","setTotalTasks","tasksRemaining","setTasksRemaining","tasks","setTasks","filter","length","newTasks","splice","map"],"mappings":";AAAA,OAAO,wBAAP;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,YAAf;AAA6BC,EAAAA;AAA7B,CAAd,EAAyD;AACrD,sBACI;AACI,IAAA,SAAS,EAAC,MADd;AAEI,IAAA,KAAK,EAAE;AAAEC,MAAAA,cAAc,EAAEJ,IAAI,CAACK,SAAL,GAAiB,cAAjB,GAAkC;AAApD,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKL,IAAI,CAACM,KAJV,eAKI;AACI,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd,KADX;AAEI,IAAA,OAAO,EAAE,MAAMJ,UAAU,CAACF,KAAD,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SALJ,eAWI;AAAQ,IAAA,OAAO,EAAE,MAAMC,YAAY,CAACD,KAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ,CADJ;AAeH;;AAED,SAASO,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAiC;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMc,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAI,CAACJ,KAAL,EAAY;AACZD,IAAAA,OAAO,CAACC,KAAD,CAAP;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GALD;;AAOA,sBACI;AAAM,IAAA,QAAQ,EAAEC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAC,OAFd;AAGI,IAAA,KAAK,EAAEF,KAHX;AAII,IAAA,WAAW,EAAC,gBAJhB;AAKI,IAAA,QAAQ,EAAGG,CAAD,IAAOF,QAAQ,CAACE,CAAC,CAACE,MAAF,CAASL,KAAV,CAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAWH;;AAED,eAAe,SAASM,IAAT,GAAgB;AAC3B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACqB,cAAD,EAAiBC,iBAAjB,IAAsCtB,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACuB,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAAC,CAC/B;AACIQ,IAAAA,KAAK,EAAE,iBADX;AAEID,IAAAA,SAAS,EAAE;AAFf,GAD+B,EAK/B;AACIC,IAAAA,KAAK,EAAE,iBADX;AAEID,IAAAA,SAAS,EAAE;AAFf,GAL+B,EAS/B;AACIC,IAAAA,KAAK,EAAE,sBADX;AAEID,IAAAA,SAAS,EAAE;AAFf,GAT+B,CAAD,CAAlC;AAeAR,EAAAA,SAAS,CAAC,MAAM;AACZqB,IAAAA,aAAa,CAACG,KAAK,CAACE,MAAN,CAAcvB,IAAD,IAAUA,IAAvB,EAA6BwB,MAA9B,CAAb;AACAJ,IAAAA,iBAAiB,CAACC,KAAK,CAACE,MAAN,CAAcvB,IAAD,IAAU,CAACA,IAAI,CAACK,SAA7B,EAAwCmB,MAAzC,CAAjB;AACH,GAHQ,CAAT;;AAKA,QAAMf,OAAO,GAAIH,KAAD,IAAW;AACvB,UAAMmB,QAAQ,GAAG,CAAC,GAAGJ,KAAJ,EAAW;AAAEf,MAAAA,KAAF;AAASD,MAAAA,SAAS,EAAE;AAApB,KAAX,CAAjB;AACAiB,IAAAA,QAAQ,CAACG,QAAD,CAAR;AACH,GAHD;;AAKA,QAAMvB,YAAY,GAAID,KAAD,IAAW;AAC5B,UAAMwB,QAAQ,GAAG,CAAC,GAAGJ,KAAJ,CAAjB;AACAI,IAAAA,QAAQ,CAACxB,KAAD,CAAR,CAAgBI,SAAhB,GAA4B,IAA5B;AACAiB,IAAAA,QAAQ,CAACG,QAAD,CAAR;AACH,GAJD;;AAMA,QAAMtB,UAAU,GAAIF,KAAD,IAAW;AAC1B,UAAMwB,QAAQ,GAAG,CAAC,GAAGJ,KAAJ,CAAjB;AACAI,IAAAA,QAAQ,CAACC,MAAT,CAAgBzB,KAAhB,EAAuB,CAAvB;AACAqB,IAAAA,QAAQ,CAACG,QAAD,CAAR;AACH,GAJD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAsCR,UAAtC,MADJ,eAEI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAuCE,cAAvC,MAFJ,eAGI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,KAAK,CAACM,GAAN,CAAU,CAAC3B,IAAD,EAAOC,KAAP,kBACP,oBAAC,IAAD;AACI,IAAA,IAAI,EAAED,IADV;AAEI,IAAA,KAAK,EAAEC,KAFX;AAGI,IAAA,YAAY,EAAEC,YAHlB;AAII,IAAA,UAAU,EAAEC,UAJhB;AAKI,IAAA,GAAG,EAAEF,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CAHJ,eAcI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEQ,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAdJ,CADJ;AAoBH","sourcesContent":["import '../assets/css/Todo.css';\n\nimport React, { useEffect, useState } from 'react';\n\nfunction Task({ task, index, completeTask, removeTask }) {\n    return (\n        <div\n            className=\"task\"\n            style={{ textDecoration: task.completed ? 'line-through' : '' }}\n        >\n            {task.title}\n            <button\n                style={{ background: 'red' }}\n                onClick={() => removeTask(index)}\n            >\n                x\n            </button>\n            <button onClick={() => completeTask(index)}>Complete</button>\n        </div>\n    );\n}\n\nfunction CreateTask({ addTask }) {\n    const [value, setValue] = useState('');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (!value) return;\n        addTask(value);\n        setValue('');\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                className=\"input\"\n                value={value}\n                placeholder=\"Add a new task\"\n                onChange={(e) => setValue(e.target.value)}\n            />\n        </form>\n    );\n}\n\nexport default function Todo() {\n    const [totaltasks, setTotalTasks] = useState(0);\n    const [tasksRemaining, setTasksRemaining] = useState(0);\n    const [tasks, setTasks] = useState([\n        {\n            title: 'Grab some Pizza',\n            completed: false,\n        },\n        {\n            title: 'Do your workout',\n            completed: false,\n        },\n        {\n            title: 'Hangout with friends',\n            completed: false,\n        },\n    ]);\n\n    useEffect(() => {\n        setTotalTasks(tasks.filter((task) => task).length);\n        setTasksRemaining(tasks.filter((task) => !task.completed).length);\n    });\n\n    const addTask = (title) => {\n        const newTasks = [...tasks, { title, completed: false }];\n        setTasks(newTasks);\n    };\n\n    const completeTask = (index) => {\n        const newTasks = [...tasks];\n        newTasks[index].completed = true;\n        setTasks(newTasks);\n    };\n\n    const removeTask = (index) => {\n        const newTasks = [...tasks];\n        newTasks.splice(index, 1);\n        setTasks(newTasks);\n    };\n\n    return (\n        <div className=\"todo-container\">\n            <div className=\"header\">TOTAL TASKS ({totaltasks})</div>\n            <div className=\"header\">TODO - ITEMS ({tasksRemaining})</div>\n            <div className=\"tasks\">\n                {tasks.map((task, index) => (\n                    <Task\n                        task={task}\n                        index={index}\n                        completeTask={completeTask}\n                        removeTask={removeTask}\n                        key={index}\n                    />\n                ))}\n            </div>\n            <div className=\"create-task\">\n                <CreateTask addTask={addTask} />\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}